---
- hosts: localhost
  connection: local
  vars:
    ssh_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIljV56YleLnnoLkMFUAD9RZCTavoU8csnpLJxlMPwHPT8mznSVjkZL+P/Cmxc1GH9jpEgtlDbARDitdI9gbWiZvYJlwoUYLVt0y0cX2J3KITo04w8+5j4N/xg6pxfRgZewwCvgU5PEqpBQO0m/TFV/zKSw4P7/21yB51/dTZrw74epBSd6C7WAwySa1KV849Gu7rgXHugHuShXSuVJUY8xhopEM3leQgjV3b32Kri2mzRmRNNfkL03jwgZKiFy62JwLkC1k2k+EGdjbp6E5NIgQRPSVt0nA4EHmhA/3yTD54TtD4BLIiHjMRBcanFyfYARrJ2nzsO0ncPng28JA2j weithenn@cc-67d99671-7dcf6f7775-879rx
    resource_group: 'RG-USEast-AKS1169'
    datacenter: 'eastus'
    aks_name: 'ansibleaks1169'
    username: 'weithenn'
    client_id: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
    client_secret: "{{ lookup('env', 'AZURE_SECRET') }}"
    aks_version: '1.16.9'

  tasks:
  - name: Create a Resource Group
    azure_rm_resourcegroup:
      name: "{{ resource_group }}"
      location: "{{ datacenter }}"

  - name: Create AKS(Azure Kubernetes Service) Cluster
    azure_rm_aks:
      name: "{{ aks_name }}"
      location: "{{ datacenter }}"
      resource_group: "{{ resource_group }}"
      dns_prefix: "{{ aks_name }}"
      kubernetes_version: "{{ aks_version }}"
      linux_profile:
        admin_username: "{{ username }}"
        ssh_key: "{{ ssh_key }}"
      service_principal:
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
      agent_pool_profiles:
        - name: default
          count: 2
          vm_size: Standard_D2_v2
      tags:
        Environment: Production